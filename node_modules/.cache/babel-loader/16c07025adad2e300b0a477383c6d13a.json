{"ast":null,"code":"var _jsxFileName = \"/Users/strawberry/Desktop/week6-ReactAPP/src/Components/Task.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useParams, Link } from 'react-router-dom';\nimport { showOnlyUndoned } from '../Routes/Main'; // перенести це в компонент Tаsks\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const {\n    listsid\n  } = useParams();\n  let task = props.task;\n  let bgColor = '#1de498b5';\n  let date = '';\n  let textColor = \"normal\";\n  let nameTextDecoration = \"normal\";\n\n  if (task.done === true) {\n    if (showOnlyUndoned) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    bgColor = 'rgba(128, 128, 128, 0.3)';\n    textColor = \"rgb(52, 52, 52, 0.3)\";\n    nameTextDecoration = \"line-through\";\n  }\n\n  if (task.duedate !== undefined && task.duedate != null) {\n    if (task.done !== true) bgColor = new Date() < new Date(task.duedate) ? '#1de498b5' : '#ff73006b';\n    date = `Due date: ${new Date(task.duedate).toISOString().split('T')[0]}`;\n  }\n\n  const listLink = listsid === undefined ? /*#__PURE__*/_jsxDEV(Link, {\n    to: `/list/${task.listsid}`,\n    children: [\"List: \", task.liststitle]\n  }, task.listsid, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"data\", {\n      style: {\n        backgroundColor: `${bgColor}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          id: `task(${task.taskid})`,\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: () => props.changeDone(task.listsid, task.taskid, !task.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              'color': textColor,\n              textDecoration: nameTextDecoration\n            },\n            children: task.tasktitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: listLink\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        style: {\n          backgroundColor: `${bgColor === '#ff73006b' ? '#ff00009b' : '#ff000000'}` //Має бути поняття стану, та стилі мають залежати від нього\n\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: textColor\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: textColor\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: () => props.deleteTask(listsid, task.taskid),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u232B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}, \"agbBTRbZ/MOV22s/f+1GVVaTcGU=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/Users/strawberry/Desktop/week6-ReactAPP/src/Components/Task.js"],"names":["useParams","Link","showOnlyUndoned","props","listsid","task","bgColor","date","textColor","nameTextDecoration","done","duedate","undefined","Date","toISOString","split","listLink","liststitle","backgroundColor","taskid","changeDone","textDecoration","tasktitle","color","description","deleteTask"],"mappings":"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","sourcesContent":["import '../App.css';\nimport { useParams, Link } from 'react-router-dom';\nimport { showOnlyUndoned } from '../Routes/Main'; // перенести це в компонент Tаsks\n\nexport default (props) => {\n    const { listsid } = useParams();\n\n    let task = props.task;\n    let bgColor = '#1de498b5';\n    let date = '';\n    let textColor = \"normal\";\n    let nameTextDecoration = \"normal\";\n\n    if (task.done === true) {\n        if (showOnlyUndoned) return <></>;\n        bgColor = 'rgba(128, 128, 128, 0.3)';\n        textColor = \"rgb(52, 52, 52, 0.3)\";\n        nameTextDecoration = \"line-through\";\n    }\n    if (task.duedate !== undefined && task.duedate != null) {\n        if (task.done !== true)\n            bgColor = new Date() < new Date(task.duedate) ? '#1de498b5' : '#ff73006b'\n        date = `Due date: ${new Date(task.duedate).toISOString().split('T')[0]}`\n    }\n    const listLink = listsid === undefined ?\n        <Link key={task.listsid} to={`/list/${task.listsid}`}>\n            List: {task.liststitle}\n        </Link> : <></>;\n\n    return (\n        <div className=\"task\"> {/* Тут має бути інший клас в залежності від якого визначаються стилі інших */}\n            <data style={{ backgroundColor: `${bgColor}` }}>\n                <label>\n                    <input\n                        className=\"checkbox\"\n                        id={`task(${task.taskid})`}\n                        type='checkbox'\n                        checked={task.done}\n                        onChange={() => props.changeDone(task.listsid, task.taskid, !task.done)}\n                    />\n                    <div className=\"title\"><p style={{ 'color': textColor, textDecoration: nameTextDecoration }}>{task.tasktitle}</p></div>\n                </label>\n                <>{listLink}</>\n                <div className=\"date\" style={{\n                     backgroundColor: `${bgColor === '#ff73006b' ? '#ff00009b' : '#ff000000'}` //Має бути поняття стану, та стилі мають залежати від нього\n                     }}>\n                    <p style={{ color: textColor }}>{date}</p>\n                </div>\n                <div className=\"description\"><p style={{ color: textColor }}>{task.description}</p></div>\n            </data>\n            <button className=\"deleteButton\"\n                onClick={() => props.deleteTask(listsid, task.taskid)}\n            ><p>⌫</p></button>\n        </div >\n    );\n}\n"]},"metadata":{},"sourceType":"module"}